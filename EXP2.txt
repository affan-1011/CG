/*
2 Implement Bresenham line drawing algorithm to draw Dashed line. Divide the
screen in four quadrants with center as (0, 0). The line should work for all the slopes
*/

#include <GL/glut.h>
#include <iostream>
using namespace std;

// Function to draw X and Y axes
void drawAxes() {
    glBegin(GL_LINES);
    glVertex2i(-320, 0); glVertex2i(320, 0);  // X-axis
    glVertex2i(0, -240); glVertex2i(0, 240);  // Y-axis
    glEnd();
}

// Bresenham Line Drawing Algorithm with Dashed Line
void Bresenham_Dashed_Line(int x1, int y1, int x2, int y2) {
    int dx = abs(x2 - x1);
    int dy = abs(y2 - y1);
    int p = 2 * dy - dx;
    int twoDy = 2 * dy;
    int twoDyDx = 2 * (dy - dx);
    int x, y;
    int xEnd;

    int xStep = (x2 > x1) ? 1 : -1;
    int yStep = (y2 > y1) ? 1 : -1;

    bool steep = dy > dx;
    if (steep) {
        // Swap x and y
        swap(x1, y1);
        swap(x2, y2);
        swap(dx, dy);
    }

    p = 2 * dy - dx;
    x = x1;
    y = y1;

    glBegin(GL_POINTS);
    int count = 0;
    for (int i = 0; i <= dx; i++) {
        if (count % 6 < 3) {  // Create dash: 3 on, 3 off
            if (steep)
                glVertex2i(y, x);
            else
                glVertex2i(x, y);
        }
        x += xStep;
        if (p < 0)
            p += 2 * dy;
        else {
            y += yStep;
            p += 2 * (dy - dx);
        }
        count++;
    }
    glEnd();
}

// Display callback
void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0, 0, 0);  // Black axes
    drawAxes();

    glColor3f(0, 0, 1);  // Blue dashed line
    Bresenham_Dashed_Line(-150, -100, 100, 80);  // Example dashed line

    glFlush();
}

// Initialization
void init() {
    glClearColor(1.0, 1.0, 1.0, 0.0); // White background
    gluOrtho2D(-320, 320, -240, 240); // Coordinate system
}

// Main function
int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(640, 480);
    glutCreateWindow("Bresenham Dashed Line with Quadrants");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
